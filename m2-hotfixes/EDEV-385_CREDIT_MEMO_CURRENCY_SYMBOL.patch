--- a/vendor/magento/module-directory/Model/Currency.php
+++ b/vendor/magento/module-directory/Model/Currency.php
@@ -429,13 +429,30 @@
         }
 
         if ((array_key_exists(LocaleCurrency::CURRENCY_OPTION_DISPLAY, $options)
-                && $options[LocaleCurrency::CURRENCY_OPTION_DISPLAY] === \Magento\Framework\Currency::NO_SYMBOL)) {
-            $formattedCurrency = str_replace(' ', '', $formattedCurrency);
+            && $options[LocaleCurrency::CURRENCY_OPTION_DISPLAY] === \Magento\Framework\Currency::NO_SYMBOL)) {
+            if ($this->isArabicSymbols($formattedCurrency)) {
+                /* Workaround. We need to provide Arabic symbols range and Unicode modifier into expression
+                   to bypass issue when preg_replace with Arabic symbol return corrupted result */
+                $formattedCurrency = preg_replace(['/[^0-9\x{0600}-\x{06FF}.,۰٫]+/u', '/ /'], '', $formattedCurrency);
+            } else {
+                $formattedCurrency = preg_replace(['/[^0-9.,۰٫]+/', '/ /'], '', $formattedCurrency);
+            }
         }
 
         return preg_replace('/^\s+|\s+$/u', '', $formattedCurrency);
     }
 
+    /**
+     * Checks if given string is of Arabic symbols
+     *
+     * @param string $string
+     * @return bool
+     */
+    private function isArabicSymbols(string $string): bool
+    {
+        return preg_match('/[\p{Arabic}]/u', $string) > 0;
+    }
+
     /**
      * Get NumberFormatter object from cache.
      *
