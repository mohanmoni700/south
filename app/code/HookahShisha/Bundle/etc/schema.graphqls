# Copyright Â© Magento, Inc. All rights reserved.
# See COPYING.txt for license details.

type Cart {
    items: [CartItemInterface] @resolver(class: "\\HookahShisha\\Bundle\\Model\\QuoteGraphQl\\Resolver\\CartItems")
}

type Mutation {
    addProductsToCart(cartId: String!, cartItems: [CartItemInput!]!): AddProductsToCartOutput @doc(description:"Add any type of product to the cart") @resolver(class: "HookahShisha\\Bundle\\Model\\QuoteGraphQl\\Resolver\\AddProductsToCart")
    removeItemFromCart(input: RemoveItemFromCartInput): RemoveItemFromCartOutput @resolver(class: "HookahShisha\\Bundle\\Model\\QuoteGraphQl\\Resolver\\RemoveItemsFromCart")
}

interface CartItemInterface @typeResolver(class: "Magento\\QuoteGraphQl\\Model\\Resolver\\CartItemTypeResolver") {
    id: String! @deprecated(reason: "Use `uid` instead")
    uid: ID! @doc(description: "The unique ID for a `CartItemInterface` object")
    quantity: Float!
    prices: CartItemPrices @resolver(class: "\\Magento\\QuoteGraphQl\\Model\\Resolver\\CartItemPrices")
    product: ProductInterface!
    alfa_is_bundle: String
}

input CartItemInput {
    sku: String!
    quantity: Float!
    alfa_is_bundle: String
    parent_sku: String @doc(description: "For child products, the SKU of its parent product")
    selected_options: [ID!] @doc(description: "The selected options for the base product, such as color or size with  unique ID for a `CustomizableRadioOption`, `CustomizableDropDownOption`, `ConfigurableProductOptionsValues`, etc. objects")
    entered_options: [EnteredOptionInput!] @doc(description: "An array of entered options for the base product, such as personalization text")
}

input RemoveItemFromCartInput {
    cart_id: String!
    cart_item_id: [Int] @doc(description: "Deprecated. Use `cart_item_uid` instead.")
    cart_item_uid: [ID] @doc(description: "Required field. The unique ID for a `CartItemInterface` object")
}

interface OrderItemInterface @doc(description: "Order item details") @typeResolver(class: "Magento\\SalesGraphQl\\Model\\TypeResolver\\OrderItem") {
    id: ID! @doc(description: "The unique ID for a `OrderItemInterface` object")
    product_name: String @doc(description: "The name of the base product")
    product_sku: String! @doc(description: "The SKU of the base product")
    product_url_key: String @doc(description: "URL key of the base product")
    product_type: String @doc(description: "The type of product, such as simple, configurable, etc.")
    status: String @doc(description: "The status of the order item")
    product_sale_price: Money! @doc(description: "The sale price of the base product, including selected options")
    discounts: [Discount] @doc(description: "The final discount information for the product")
    selected_options: [OrderItemOption] @doc(description: "The selected options for the base product, such as color or size")
    entered_options: [OrderItemOption] @doc(description: "The entered option for the base product, such as a logo or image")
    quantity_ordered: Float @doc(description: "The number of units ordered for this item")
    quantity_shipped: Float @doc(description: "The number of shipped items")
    quantity_refunded: Float @doc(description: "The number of refunded items")
    quantity_invoiced: Float @doc(description: "The number of invoiced items")
    quantity_canceled: Float @doc(description: "The number of canceled items")
    quantity_returned: Float @doc(description: "The number of returned items")
    alfa_is_bundle: String
}