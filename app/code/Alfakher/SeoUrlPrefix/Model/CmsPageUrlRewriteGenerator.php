<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
namespace Alfakher\SeoUrlPrefix\Model;

use Magento\CmsUrlRewrite\Model\CmsPageUrlPathGenerator;
use Magento\Store\Model\StoreManagerInterface;
use Magento\UrlRewrite\Service\V1\Data\UrlRewriteFactory;

class CmsPageUrlRewriteGenerator extends \Magento\CmsUrlRewrite\Model\CmsPageUrlRewriteGenerator
{
    /**
     * Entity type code
     */
    public const ENTITY_TYPE = 'cms-page';

    /**
     * @var \Magento\UrlRewrite\Service\V1\Data\UrlRewriteFactory
     */
    protected $urlRewriteFactory;

    /**
     * @var \Magento\CmsUrlRewrite\Model\CmsPageUrlPathGenerator
     */
    protected $cmsPageUrlPathGenerator;

    /**
     *
     * @var StoreManagerInterface
     */
    protected $storeManager;

    /**
     * @var \Magento\Cms\Model\Page
     */
    protected $cmsPage;

    /**
     * @param \Magento\UrlRewrite\Service\V1\Data\UrlRewriteFactory $urlRewriteFactory
     * @param \Magento\CmsUrlRewrite\Model\CmsPageUrlPathGenerator $cmsPageUrlPathGenerator
     * @param StoreManagerInterface $storeManager
     */
    public function __construct(
        UrlRewriteFactory $urlRewriteFactory,
        CmsPageUrlPathGenerator $cmsPageUrlPathGenerator,
        StoreManagerInterface $storeManager
    ) {
        $this->urlRewriteFactory = $urlRewriteFactory;
        $this->storeManager = $storeManager;
        $this->cmsPageUrlPathGenerator = $cmsPageUrlPathGenerator;
    }

    /**
     * Create url rewrite object
     *
     * @param int $storeId
     * @param int $redirectType
     * @return \Magento\UrlRewrite\Service\V1\Data\UrlRewrite
     */
    protected function createUrlRewrite($storeId, $redirectType = 0)
    {
        //$storeid = $this->storeManager->getStore()->getId();
        $storeManagerDataList = $this->storeManager->getStores();
        foreach ($storeManagerDataList as $key => $value) {
            $storeid = $key;
            if ($value['code'] == "hookah_wholesalers_store_view") {
                $storeid = $key;
            }
        }
        $prifix = $storeId == $storeid ? 'content/' : '';
        return $this->urlRewriteFactory->create()->setStoreId($storeId)
            ->setEntityType(self::ENTITY_TYPE)
            ->setEntityId($this->cmsPage->getId())
            ->setRequestPath($prifix . $this->cmsPage->getIdentifier())
            ->setTargetPath($this->cmsPageUrlPathGenerator->getCanonicalUrlPath($this->cmsPage))
            ->setIsAutogenerated(1)
            ->setRedirectType($redirectType);
    }
}
