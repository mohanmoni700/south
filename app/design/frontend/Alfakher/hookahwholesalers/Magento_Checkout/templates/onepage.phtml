<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

/** @var $block \Magento\Checkout\Block\Onepage */
/** @var \Magento\Framework\View\Helper\SecureHtmlRenderer $secureRenderer */
?>

<div id="checkout" data-bind="scope:'checkout'" class="checkout-container">
    <div id="checkout-loader" data-role="checkout-loader" class="loading-mask" data-mage-init='{"checkoutLoader": {}}'>
        <div class="loader">
            <img src="<?= $block->escapeUrl($block->getViewFileUrl('images/loader-1.gif')) ?>"
                 alt="<?= $block->escapeHtmlAttr(__('Loading...')) ?>">
        </div>
    </div>
    <?= /* @noEscape */ $secureRenderer->renderStyleAsTag("position: absolute;", "#checkout-loader img") ?>
    <!-- ko template: getTemplate() --><!-- /ko -->
    <script type="text/x-magento-init">
        {
            "#checkout": {
                "Magento_Ui/js/core/app": <?= /* @noEscape */ $block->getJsLayout() ?>
            }
        }
    </script>
    <?php $serializedCheckoutConfig = /* @noEscape */ $block->getSerializedCheckoutConfig();
    $scriptString = <<<script
        window.checkoutConfig = {$serializedCheckoutConfig};
        // Create aliases for customer.js model from customer module
        window.isCustomerLoggedIn = window.checkoutConfig.isCustomerLoggedIn;
        window.customerData = window.checkoutConfig.customerData;
script;
    ?>
    <?= /* @noEscape */ $secureRenderer->renderTag('script', [], $scriptString, false) ?>
    <?php $scriptString = <<<script
        require([
            'mage/url',
            'Magento_Ui/js/block-loader'
        ], function(url, blockLoader) {
            blockLoader("{$block->escapeJs($block->escapeUrl($block->getViewFileUrl('images/loader-1.gif')))}");
            return url.setBaseUrl('{$block->escapeJs($block->escapeUrl($block->getBaseUrl()))}');
        })
script;
    ?>
    <?= /* @noEscape */ $secureRenderer->renderTag('script', [], $scriptString, false) ?>
</div>
<script>
    require([
        'jquery',
        'Magento_Customer/js/customer-data',
        'Magento_Checkout/js/model/quote',
        'underscore'
    ], function ($, customerData, quote, _) {
        $(document).ready(function () {
            let cartData = customerData.get('cart');
            // Subscribe to changes on the cartData observable
            cartData.subscribe(function (updatedCartData) {
                // Check if the cart data is available
                if (!$.isEmptyObject(updatedCartData)) {
                    let cartItems = updatedCartData['items'] || [];

                    // Continue with your logic here
                    let isAmastyQuoteItem = false;
                    if (cartItems.length > 0) {
                        $.each(cartItems, function (index, item) {
                            if (item['is_amasty_quote_item']) {
                                isAmastyQuoteItem = true;
                                return false; // exit the loop since we found the item
                            }
                        });
                        if (isAmastyQuoteItem) {
                            $('.yotpo-widget-checkout-redemptions-widget').hide();
                            $('.yotpo-checkout-widget-content').hide();
                        }
                    }
                } else {
                    console.log('Cart data not available.');
                }
            });
            // Trigger the cartData observable to fetch the cart data
            cartData();
        });
    });

</script>
